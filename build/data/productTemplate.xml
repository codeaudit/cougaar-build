<?xml version="1.0" encoding="ASCII" standalone="yes" ?> 
<!DOCTYPE ant1.5 SYSTEM "ant-1.5.dtd">
<!-- Comment out the DTD reference if you want to avoid ANT validating. -->
<!--
     Template compiling (by the build script) is performed by searching
     for "percent { VAR }" patterns and replacing the matched string with:
	Name - name of the product
	BEGIN - all lines upto and including this one are skipped.
 -->

<!-- %{BEGIN} Everything after this line will be included in the generated module build.xml files -->
<!-- Autobuild-generated ANT script for building the whole "%{Name}" product. -->
<!-- The source for this file is in build/data/productTemplate.xml -->

<!--
    This file with default settings expects to live in the same
    directory as all of the modules, e.g. COUGAAR_INSTALL_PATH with 
    unpacked sources.  There isn't currently a good way to deliver
    it in this way, so for now it is part of the top level distribution.
  -->

<!-- autobuild might execute this with something like:
  ant -DTARGETBASE=/tmp/%{Name}/latest/target -DSOURCEBASE=/tmp/%{Name}/latest/src
      -DTMP=/tmp/tmpdir                                           -->

<!-- Instructions for individual users:
     Installation layout is configurable. Standard settings:
       TARGETBASE=.. (ie COUGAAR_INSTALL_PATH)
       SOURCEBASE=. (ie the directory containing the module sources)
       TMPDIR=./tmp

     Other settings may be over-ridden using the optional properties
     files SOURCEBASE/%{Name}.properties and TARGETBASE/global.properties

-->

<!-- ================================================================   -->
<project name="%{PrettyName}" default="build">
    <property name="product" value="%{Name}"/>
    <property name="productUp" value="%{PrettyName}"/>

    <!-- ====== Basic Directories, and user property over-rides  ====== -->
    <!-- SOURCEBASE is where the sources for the modules are -->
    <property name="SOURCEBASE" value="." /> 

    <!-- builddata is where the master build data is kept -->
    <property name="build.data" value="${SOURCEBASE}/build/data"/>

    <property file="${build.data}/${product}.properties" />  <!-- per-product properties file! -->

    <!-- TARGETBASE is where we will install files -->
    <!-- In a developer environment, this is usually
    COUGAAR_INSTALL_PATH -->
    <property name="TARGETBASE" value=".." />
    <!-- Set any not-yet-set properties to values specific to this
    installation -->
    <property file="${TARGETBASE}/global.properties" />

    <!-- You can also have a user-specific global properties file. -->
    <!-- Windows users will have to set user.home, eg by invoking
     ant with: -Duser.home=D:/MyHomeDir  -->
    <!-- To use such a file, uncomment the following line. -->
    <!--    <property file="${user.home}/.ant.properties" /> -->

    <!-- ================ Tool options ================ -->
    <!-- Individual users may choose to modify these settings. -->
    <!-- These values are only used if not already set by the
    module.properties or global.properties files. For all property
    values, the first setting wins. -->

    <!-- Note that a popular alternative build.compiler is 'jikes' -->
    <property name="build.compiler" value="modern"/>
    <!-- Include extra debug info in compilations -->
    <property name="build.compiler.debug" value="on"/>
    <!-- Do not include deprecation warnings -->
    <property name="build.compiler.deprecation" value="off"/>
    <!-- Don't exclude basic debug info -->
    <property name="build.compiler.optimize" value="off"/>

    <!-- ================ Ant options ================ -->
    <!-- Keep the ant environment separate from the target environment -->
    <property name="build.sysclasspath" value="ignore"/>

    <!-- ================ Directories ================ -->

    <!-- TMP is a temporary location for compiling, zipping, etc -->
    <!-- Generated classfiles will go in TMP/classes, so that would often
    be the setting for COUGAAR_DEV_PATH in a developer environment -->
    <property name="TMP" value="${SOURCEBASE}/tmp" />

    <!-- Individuals should not need to modify below here. -->

    <!-- Install the entire product, putting new jar files in /lib -->
    <target name="install" depends="%{install.depends}"
            description="Install built jar files in ./lib">
    </target>
    <!-- Build the entire product -->
    <target name="test" depends="%{test.depends}"
            description="Compile all source for the modules in this product">
    </target>
    <target name="clean" depends="%{clean.depends}"
            description="Compile all source for the modules in this product">
    </target>

    <!-- Special case (for now) for jars module -->
    <target name="build.jars" description="build standard jarfile stuff">
    </target>
    <target name="clean.jars" description="clean standard jarfile stuff">
    </target>
    <target name="test.jars" description="test standard jarfile stuff">
    </target>
    <target name="install.jars" description="Install standard jarfiles">
      <mkdir dir="${SOURCEBASE}/sys"/>
      <copy todir="${SOURCEBASE}/sys">
	<fileset dir="${SOURCEBASE}/jars/lib">
	  <patternset id="jars and html">
	    <include name="**/*.jar"/>
	    <include name="**/*.zip"/>
	    <include name="**/*.html"/>
	    <include name="**/*.htm"/>
	  </patternset>
	</fileset>
      </copy>
    </target>
<!-- Now define the sub-targets for each module in the product -->

<!-- %{MODULE_START} The start of the per-module recipe -->

    <!-- Module %{MODULE} -->
    <target name="install.%{MODULE}" depends="%{install.depends}"
            description="Install the built jar file for %{MODULE} in the
                         appropriate lib directory">
      <ant dir="${SOURCEBASE}/%{MODULE}" target="install"
	   inheritAll="true">
      </ant>
    </target>
    <target name="clean.%{MODULE}" depends="%{clean.depends}"
            description="Compile the %{MODULE} module">
      <ant dir="${SOURCEBASE}/%{MODULE}" target="clean"
	   inheritAll="true">
      </ant>
    </target>
    <target name="test.%{MODULE}" depends="%{test.depends}"
            description="Compile the %{MODULE} module">
      <ant dir="${SOURCEBASE}/%{MODULE}" target="test"
	   inheritAll="true">
      </ant>
    </target>

<!-- %{MODULE_END} End of per-module recipe -->    

<!-- Need separate compile-but-dont do all the rest target -->
</project>
